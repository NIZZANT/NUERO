name: Run CI
on:
  push:
    branches:
      - main      
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: setup CI
      uses: lava-nc/ci-setup-composite-action@v1.2
      with:
        repository: 'Lava'    

    - name: Run flakeheaven (flake8)
      run: poetry run flakeheaven lint src/lava tests/
      
    - name: Run cpplint (cpplint)
      run: poetry run cpplint --recursive --quiet \
           --repository=src/lava/magma/runtime/message_infrastructure/message_infrastructure/ \
           --root=csrc \
           --exclude=src/lava/magma/runtime/message_infrastructure/message_infrastructure/csrc/channel/dds/protos \
           src/lava/magma/runtime/message_infrastructure/message_infrastructure/ \
           src/lava/magma/runtime/message_infrastructure/test/

  security-lint:
    name: Security Lint Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: setup CI
      uses: lava-nc/ci-setup-composite-action@v1.2
      with:
        repository: 'Lava'

    - name: Run bandit    
      uses: tj-actions/bandit@v5.1
      with:
        targets: |
          src/lava/.      
        options: "-r --exclude build --format custom --msg-template '{abspath}:{line}: {test_id}[bandit]: {severity}: {msg}'"

  unit-tests:
    name: Unit Test Code + Coverage
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        # TODO: restore it before merge into ML
        operating-system: [ubuntu-latest,] # windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: setup CI
      uses: lava-nc/ci-setup-composite-action@v1.2
      with:
        repository: 'Lava'

    - name: Run unit tests
      run: |
        poetry run git lfs fetch
        poetry run git lfs pull
        poetry run pytest

  msg-infr-unit-tests:
    name: Message Infrastructure Unit Test
    runs-on: ${{ matrix.operating-system }}
    env:
      DEBUG: 1

    strategy:
      matrix:
        # TODO: restore it before merge into ML
        operating-system: [ubuntu-latest,] #windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: setup CI
      uses: lava-nc/ci-setup-composite-action@v1.2
      with:
        repository: 'Lava'

    - name: Install dependencies
      working-directory: ./src/lava/magma/runtime/message_infrastructure
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install message_infrastructure
      working-directory: ./src/lava/magma/runtime/message_infrastructure
      run: poetry install --no-interaction

    - name: Run message infrastructure cpp unit tests
      working-directory: ./src/lava/magma/runtime/message_infrastructure/
      run: build/temp.*/MessageInfrastructurePywrapper/test/test_messaging_infrastructure

    - name: Run message infrastructure unit tests
      working-directory: ./src/lava/magma/runtime/message_infrastructure
      if: runner.os == 'Linux'
      run: poetry run pytest test/
